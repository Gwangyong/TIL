
# 백준 [알파벳 찾기(10809)](https://www.acmicpc.net/problem/10809) 


![Image](https://github.com/user-attachments/assets/4ac4abad-867d-4ba1-af1f-d7790df3a9d5)

<br>

## 내가 작성한 코드 (메모리 69100KB, 시간 8ms, 코드길이 261B)
- 영어 알파벳은 a~z까지 총 26개이다.
- ASCII 코드로는 97~122까지인데, 반복문을 사용함으로 편의성을 위해서 -97을 0~25으로 변경해주었다.
```swift
let s = readLine()!
var result = Array(repeating: -1, count: 26) // -1로 채운 후, 값이 있으면 index 값을 채워주는 방식으로
var sArr = s.map { Int($0.asciiValue!) - 97 } // asciiArr와 조건을 맞추기 위해 입력받은 s값을 ascii 코드 값으로 변환 후, -97을 해줌

for i in 0...25 { // a~z까지 아스키 코드 값을 -97을 해준 값
    if let idx = sArr.firstIndex(of: i) {
        result[i] = idx
    }
}

result.forEach {
    print($0, terminator: " ")
}
```
### 추가 학습 내용들
- asciiValue : Character 타입의 값을 해당하는 ASCII 코드의 값(UInt8)으로 변환주는 프로퍼티
- firstIndex(of: ) : 배열 안에서 특정 값이 처음 나오는 위치(index)를 찾아주는 메서드. 찾는 값이 없다면 nil 반환

<br>

## 다른 사람의 코드를 보고 공부 (메모리 69100KB, 시간 8ms, 코드길이 156B)
```swift
let input = readLine()!.map { $0.asciiValue! } // 입력 받은 문자열을 ASCII값(UInt8)으로 변환한 배열
let result = (97...122).map { input.firstIndex(of: $0) ?? -1 } // 알파벨 a~z의 ASCII 값을 기준(of: $0)으로 input의 첫 등장 위치(index)를 찾음. 만약 값이 없으면 -1 출력
result.forEach {
    print($0, terminator: " ")
}

 asciiValue : Character 타입의 값을 해당하는 ASCII 코드의 값(UInt8)으로 변환주는 프로퍼티
 firstIndex(of: ) : 배열 안에서 특정 값이 처음 나오는 위치 (index)를 찾아주는 메서드. 찾는 값이 없다면 nil 반환
// -> (97...122)는 소문자 a~z의 ASCII 값 범위이며, $0은 그 값들을 하나씩 받아서 input 배열에서 첫 등장 위치를 찾음
// -> 만약 동일한 값이 없다면 ?? -1을 통해서 -1을 반환함
```